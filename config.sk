#     __________________________________________________________
#    / /                                                   / /\ \
#    \_\___________________________________________________\_\/ /
#        / /    _____    __            __                    / /
#       / /    / ____\  / /           /_/          /\       / /
#      / /    / /__    / /___  ___   __  ______ __/ /_     / /
#     / /     \___ \  /   __/ / __\ / / / __  //_  __/    / /
#    / /     ____/ / / /\ \  / /   / / / /_/ /  / /      / /
#   / /     \_____/ /_/ /_/ /_/   /_/ / ____/  /_/      / /__
#  / /    ========================== / / ==========    / / \ \
# | |                               /_/               | |   | |
#  \_\_________________________________________________\_\_/_/
#
# == Introduction ==
# This file contains Skript's general options. To write scripts, create a new .sk file in the scripts folder or edit any existing one.
#
# Script files prefixed with a hyphen (-) will not be loaded, e.g. renaming 'plant with hoe.sk' to '-plant with hoe.sk' will disable the whole file.
# This can e.g. be used to temporarily disable scripts and is also used for Skript's example scripts.
# You can also use the command '/skript enable/disable <script>' to enable/disable a script which will automatically rename it.
#
# === !!! PLEASE NOTE !!! ===
# This file, all scripts and other files ending in .sk are NOT .yml/YAML files, but very similar!
# Please remember the following when editing files:
# - To indent sections you can use spaces like in YAML, but tabs are also allowed. Just remember to stick to the one or the other for a section/trigger.
# - '#' starts a comment like in YAML. If you don't want it to start a comment simply double it: '##' (You do NOT have to double these in "quoted text")
# - If you use special characters (§, äöü, éèàôç, ñ, etc.) you have to encode the file in UTF-8.
#



# ==== General Options ====

language: english
# Which language to use. Currently English, German, Korean, French, Polish, Russian, Japanese, Simplified Chinese, Turkish, Dutch, Spanish and Catalan
# are included in the download, but custom languages can be created as well. Use the name in lowercase and no spaces as the value.
# Please note that not everything can be translated yet, i.e. parts of Skript will still be english if you use another language.
# If you want to translate Skript to your language please read the readme.txt located in the /lang/ folder in the jar
# (open the jar as zip or rename it to Skript.zip to access it)

check for new version: true
# Whether Skript should check for whether a new version of Skript is available when the server starts.
# If this is set to true Skript will announce a new version to all players with the "skript.admin" permission.
# If set to false you can still check for a new version with '/skript update check'.
# Please note that Skript will not detect beta releases even if you are running one as they are not necessarily stable.

update check interval: 12 hours
# If 'check for new version' is enabled, this sets how often to check for a new update.
# A first check will always be made when the server starts, after that checks will be made in intervals set by this option.
# Set this to 0 to disable repeated checks, in which case only one check will be made when the server starts.
# Please note that this option is currently the only means of making Skript check for an update more than once,
# as '/skript update check' does only display the results of the last check if a check has been made before.

release channel: prerelease
# If 'check for new version' is enabled, this determines how stable the updates must be.
# 'stable' means that only stable releases of Skript will be considered updates.
# 'prerelease' means that development releases will also be checked for.
# Initial value of this depends on the Skript version you first installed; it was 'stable'.
# Initial value of this depends on the Skript version you first installed; it was 'prerelease'.

enable effect commands: true
effect command token: !
# If 'enable effect commands' is set to true, chat messages starting with the 'effect command token' will be interpreted as effects and executed.
# The token can be longer than a single character, but it should not start with '/' as that starts a command.
# A player needs the permission "skript.effectcommands" to use such commands,
# which does not default to OPs since these commands can do severe damage to the world or crash the server (see below).
# Some example commands which can be used if this setting is enabled:
#	!heal player - heals the player (doesn't do anything if used from the console)
#	!repair tool - repairs the currently held item
#	!broadcast "<red>Please read the rules!" - if you want to get rid of the quotes you have to define a custom command
#	!set time to 6:00 - sets the time in the current world
# The command can also be abused, so only give the permission to trusted players, like owners & co-owners:
#	!set player's balance to 999999999 - when a compatible economy plugin is installed, this will give the command sender as much money as desired
#	!create explosion of force 10000 - likely crashes the server or at least hangs it up for a long time
#	!ban all players - as the effect implies

allow ops to use effect commands: true
# Whether server operators which do not have the permission "skript.effectcommands" should have access to effect commands.
# This setting is mainly useful for servers that do not run any permissions plugin.

log effect commands: true
# Whether Skript should log the usage of effect commands.
# They will be logged as [INFORMATION] in this format: '<player> issued effect command: <command>'


load default aliases: true
# Whether Skript should use the default, Skript-provided aliases for items.
# Disabling this will cause all aliases to be automatically generated. Some items, like potions,
# will likely not have aliases in this case.
#
# You can provide your own aliases by making an 'aliases' folder in the Skript directory and putting the alias files there.
# The default aliases folder is available with Skript releases on GitHub.


player variable fix: true
# Whether to enable the player variable fix if a player has rejoined and was residing inside a variable.
# Player objects inside a variable (list or normal) are not updated to the new player object
# that a server creates whenever a player rejoins.
# Basically the variable holds the old player object when a player has rejoined thus rendering the variable kinda broken.
# This fix should work around that and whenever a invalid(old) player object is attempted to be get through a variable
# It will check if the player is online and then get the valid(new) player object and update the variable object to that one.

use player UUIDs in variable names: true
# Whether to use a player's UUID instead of their name in variables, e.g. {home::%player%} will look like
# {home::e5240337-a4a2-39dd-8ed9-e5ce729a8522} instead of {home::njol}.
# Please note that if this setting is changed old variables WILL NOT be renamed automatically.


date format: yyyy. MM. dd. HH:mm
# The date format to be used when dates should be displayed.
# This can be 'default' to use Java's default date format for the system's language.
# The format is that of Java's SimpleDateFormat as defined here: https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html
# some examples:
#  d/M/yyyy h:mm a => 15/7/2012 8:53 PM
#  dd.MM.yyyy, HH:mm => 16.03.2013, 09:33


verbosity: normal
# Determines how much info is logged.
# Allowed values: low, normal, high, very high, debug
# The highest you should go is very high, which prints quite a lot of useful information,
# including how much time each trigger takes to execute.
# Only use debug if you're programming an add-on for Skript, but even then you might usually not need it.


plugin priority: high
# Allowed values: lowest, low, normal, high, highest
# Change this if you encounter problems with other plugins, e.g.:
# - cancelled events: The event is cancelled by another plugin, but Skript handles the event nonetheless => increase priority
#                    (e.g. WorldGuard cancels events if a player doesn't have permission for the given region,
#                     and you made some 'place' triggers which should not bypass WorldGuard's protection)
# - effects '(un)cancel event': Another plugin should/should not process the event, but does/does not => decrease priority
# - effect 'drop': Another plugin doesn't process added drops => decrease priority
# - effects 'remove ... from drops'/'clear drops': Drops added by other plugins are not removed => increase priority
#                                                  Skript removes drops it shouldn't => decrease priority or specify which item types to remove

listen to cancelled events by default: false
# Determines whether `on <event>` will be triggered by all events (true) or only uncancelled events (false).
# The default is false, which maintains traditional Skript behavior.

number accuracy: 2
# How many digits should be displayed after the dot at maximum when displaying numbers.
# Zeroes will never be displayed at all, so this setting only applies to numbers that actually have a decimal part with one or more non-zero digits.
# Money bypasses this setting and is displayed as configured in your economy plugin if you have one.


maximum target block distance: 100
# How far to search for a player's targeted block in blocks/meters.
# Lower values improve performance, but might reduce the usability of your scripts.
# This value is limited by the server (e.g. by 'view-distance' in the server.properties), but is guaranteed to work up to 100 meters.


case sensitive: false
# Whether Skript's functions should be case sensitive or not.
# This e.g. applies to the effect 'replace', expression 'indices of value' and the conditions 'contains' and 'is/is not'.
# Variable names are case-insensitive irrespective of this setting.

case-insensitive variables: true
# Whether Skript's variables should be case sensitive or not.
# When set to true, all variable names and indices case will be ignored.

case-insensitive commands: true
# Whether Skript should accept custom commands regardless of case.
# When set to true, /test, /Test, and /TEST will all be equivalent.
# This does not affect non-Skript commands.

disable variable will not be saved warnings: false
# Disables the "... i.e contents cannot be saved ..." warning when reloading and something in your scripts sets a variable(non local) to a value that is not serializable.
# By Mirre.

disable variable missing and/or warnings: false
# Disables the "List is missing 'and' or 'or', defaulting to 'and'" warning when reloading your script.

disable starting a variable's name with an expression warnings: false
# Disables the "Starting a variable's name with an expression is discouraged..." warnings

disable unreachable code warnings: false
# Disables the "Unreachable code. The previous statement stops further execution." warnings.

soft api exceptions: false
# Allows Skript to ignore certain actions which would normally result in thrown exceptions.
# If everything works correctly, you should keep this option disabled. It might cause problems in some cases.
# However, if Skript or addons of it are not working correctly, this might help.
# You may also get told to enable this by Skript or addon developers - then do so.

enable timings: false
# When enabled, triggers in scripts will be present in timings reports.
# Note that this requires Paper (https://papermc.io/downloads/paper) to work; on Bukkit/Spigot this option has no effect.
# Warning: Paper no longer supports Timings as of 1.19.4. This option has no effect on versions 1.19.4 and above.
# When false, timings are not enabled for scripts even if you're running Paper.

parse links in chat messages: disabled
# Controls how Skript will try to parse links in chat messages.
# If 'disabled' or 'false', no links will be automatically parsed.
# When 'strict', everything starting with http(s):// will be parsed as link.
# When 'lenient', everything that contains a dot will be interpreted as a link.

color codes reset formatting: true
# With old Minecraft chat protocol, color codes used to reset formatting of text.
# With JSON-based new chat protocol, this is not necessary, but can be done
# manually for compatibility. This is done by default for compatibility.

keep command last usage dates: false
# When a cooldown is set on a command, the last usage date is kept in memory (or in a variable if cooldown storage is specified),
# but when the player uses the command again after the cooldown period is over, the last usage will be deleted as it's no longer needed,
# If you need to use the expression 'last usage date', then you'll want to enable this.

script loader thread size: 0
# Enables asynchronous script loading, which will load scripts in the background instead of blocking the server to load scripts.
# Setting this to a value of 0 or lower will disabled asynchronous loading, and all scripts will be loaded on the main server thread.
# Setting this to a value of 1 will enabled asynchronous loading, which won't block the main server.
# Setting this to a value of 2 or higher will enable parallel loading as well as asynchronous loading,
#   which will distribute the loading of scripts over multiple threads. This could cause issues if your scripts depend on
#   their loading order (function definitions are always loaded in advance, so they won't be affected).
# You may also set this option to 'processor count' (without apostrophes) to use the number of available processors.
# Do note that though, this option may cause issues with addons and possibly some scripts! Do NOT enable this option unless you have really long
#   script load times AND you take the risk of lost data and full responsibility!

disable hooks:
	vault: false
	regions:
		grief prevention: false
		precious stones: false
		residence: false
		worldguard: false
		# Controls whether Skript should attempt to hook into the plugins listed above.
		# If you change a setting here while the server is running, a restart is required for that change to take effect.
		# Do note that some addons may stop Skript from hooking into a plugin, even if the plugin's hook is not disabled here.
		
player name regex pattern: [a-zA-Z0-9_]{1,16}
# A regex pattern that is used to match player names.
# This can be used if you are using Geyser, where some usernames are prefixed by a certain character.

long parse time warning threshold: 0 seconds
# This setting determines how long a statement can take to parse before Skript produces a warning
#   stating that the statement has taken a long time to parse.
# A value of 0 seconds means that this warning should be disabled.

variable changes until save: 1000
# This setting controls the total number of times that global variables need to be changed
#   until saving variables to 'variables.csv'.
# 'set {a} to 1' is one change, 'set {b} to 2' now makes it two.
# You cannot provide a value of zero or less.
# WARNING: This setting should be used at your own discretion.
#          This setting can lag your server depending on how often variables get saved and
#          the number of variables needing to be saved.

# ==== Runtime Errors ====

runtime errors:
	frame duration: 1 second
	# Frames are the duration over which runtime errors will be collected before being sent off to console.
	# If you find runtime errors to be annoying or clogging your console, you should first fix them!
	# You can also lengthen this duration to reduce the amount of individual errors printed to console.
	
	# -- Errors --
	total errors per frame: 8
	# This controls the maximum number of individual errors that will be printed per frame.
	# If more errors occur, they will be hidden and the frame will simply display that x number of
	# errors occurred but were hidden this frame.
	
	errors from one line per frame: 2
	# This controls the maximum number of errors a single line can print per frame. This is used to prevent
	# line from clogging up the frame, like if a syntax was in a 10 iteration loop and errored every time.
	# It's best to keep this rather low.
	
	error spam timeout limit: 4
	# If a line prints more than this many errors in a single frame, it will be put in timeout. This means
	# any additional errors it creates during the timeout duration will be hidden, rather than printed.
	# This is also a defense against a syntax in a loop spamming console with errors.
	
	error timeout length: 10
	# This is the number of frames before a line in timeout can print errors again.
	# If you lengthen the frame duration, you may want to lower this proportionally.
	
	# -- Warnings --
	# All the above descriptions for errors apply the same here, but for warnings instead.
	
	total warnings per frame: 8
	warnings from one line per frame: 2
	warning spam timeout limit: 4
	warning timeout length: 10
	
	
	# ==== Variables ====

databases:
	# Each database definition must be in a separate section. You can choose any name for the sections, as long as it's not already used.
	default:
		# The default "database" is a simple text file, with each variable on a separate line and the variable's name, type, and value separated by commas.
		# This is the last database in this list to catch all variables that have not been saved anywhere else.
		# You can modify this database freely, but make sure to know what you're doing if you don't want to lose any variables.
		
		type: CSV
		
		pattern: (?!-).*
		
		file: ./plugins/Skript/temp-data.csv
		
		backup interval: 2 hours
		backups to keep: 0
		
		# ==== Settings that should not be changed ====
		
		# I recommend to use a single character to denote unsaved variables (similar to local variables' '_'), e.g. '-', in which case the last database's pattern should be '(?!-).*'.
		# Be very cautious when doing this however as unsaved variables cannot be recovered after the server has been stopped.
		# you can modify the last database's pattern to not match all variables, e.g. use '(?!x_).*' to match all variables that don't start with 'x_'.
		# PS: If you don't want some variables to be saved in any database (e.g. variables that contain an %entity% which usually despawn when the server is shut down)
version: 2.13.0
# DO NOT CHANGE THIS VALUE MANUALLY!
# This saves for which version of Skript this configuration was written for.
# If it does not match the version of the .jar file then the config will be updated automatically.
